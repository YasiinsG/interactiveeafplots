% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interactive_eaf_plot.R
\name{interactiveeafplot}
\alias{interactiveeafplot}
\title{Interactively plotting the EAF}
\usage{
interactiveeafplot(
  x,
  percentiles = c(0, 50, 100),
  maximise = FALSE,
  col = c("white", "black"),
  type = "point",
  lty = "solid",
  psize = 2,
  pshape = 16,
  legend.pos = "topright",
  xaxis.side = "below",
  yaxis.side = "left",
  axes = TRUE,
  xlabel = NULL,
  ylabel = NULL,
  sci.notation = FALSE,
  plot = "plotly"
)
}
\arguments{
\item{x}{Either a matrix of data values, or a data frame, or a list of data frames of exactly three columns.}

\item{percentiles}{\code{(numeric())} - Vector indicating which percentile should be plot. The default is to plot only the median attainment curve.}

\item{maximise}{\code{(logical() | logical(1))} - Whether the objectives must be maximised instead of minimised. Either a single logical value that applies to all objectives or a vector of logical values, with one value per objective.}

\item{col}{A vector of colours used to plot.}

\item{type}{\code{(character(1))} - string giving the type of plot desired. The following values are possible, \code{'point'} and \code{'area'}.}

\item{lty}{Line type. See \code{\link[plot.default()]{plot.default()}}.}

\item{psize}{Size of plotted points}

\item{pshape}{Shape of plotted point. See \code{\link[plot.default()]{plot.default()}}.}

\item{legend.pos}{The position of the legend, valid values are \code{'topright'}, \code{'top'}, \code{'topleft'}, \code{'right'}, \code{'left'}, \code{'bottom'}, \code{'bottomright'}, \code{'bottomleft'} and \code{'center'}. A value of \code{'none'} hides the legend.}

\item{xaxis.side}{On which side that xaxis is drawn. Valid values are \code{'below'} and \code{'above'}.}

\item{yaxis.side}{On which side that yaxis is drawn. Valid values are \code{'left'} and \code{'right'}.}

\item{axes}{A logical value indicating whether both axes should be drawn on the plot.}

\item{xlabel, ylabel}{Axes labels.}

\item{sci.notation}{Generate scientific labels}

\item{plot}{Interactive or none interactive plot. Valid values are \code{'plotly'} and \code{'ggplot'}.}
}
\value{
A plot of the attainment surfaces.
}
\description{
Interactively plotting the EAF
}
\examples{
options("warn"=-1)
library(interactiveeafplots)

data(gcp2x2,package='interactiveeafplots')
tabucol <- subset(gcp2x2, alg != "TSinN1")
tabucol$alg <- tabucol$alg[drop=TRUE]
mydata <- dplyr::filter(tabucol, inst == "DSJC500.5")
mydata <- mydata[c("time","best","run")]
interactiveeafplot(x=mydata, percentiles=c(0,50,100), col=c("yellow","red"),
                   maximise=FALSE, type="area", lty="longdash",
                   psize=3, pshape=10, legend.pos="topright",
                   xaxis.side="top", yaxis.side="left", axes=TRUE,
                   sci.notation=FALSE, xlabel="MIN X", ylabel="MIN Y",
                   plot="plotly")

data(SPEA2minstoptimeRichmond,package='interactiveeafplots')
SPEA2minstoptimeRichmond[,2] <- SPEA2minstoptimeRichmond[,2] / 60
interactiveeafplot(SPEA2minstoptimeRichmond, percentiles = c(0,50,100),
                   col=c("yellow","red"),maximise=c(TRUE,FALSE), type="point",
                   lty="longdash", psize=3, pshape=10, legend.pos="topleft",
                   xaxis.side="bottom", yaxis.side="left", axes=TRUE,
                   sci.notation=FALSE, xlabel = "C[E]",
                   ylabel = "Minimum idle time (minutes)",
                   plot = "plotly")

}
